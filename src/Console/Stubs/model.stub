<?php

namespace {{ vendor }}\{{ plugin }}\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Casts\Attribute;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Spatie\MediaLibrary\HasMedia;
use Spatie\MediaLibrary\InteractsWithMedia;
use App\Models\User;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Spatie\MediaLibrary\MediaCollections\Models\Media;

class {{ singularUcfirst }} extends Model implements HasMedia
{
    use HasFactory;
    use InteractsWithMedia;

    protected $fillable = [
       'user_id',
    ];

    //protected $casts = [
    //    'date' => 'date',
    //    'date_time' => 'datetime',
    //    'time' => 'datetime',
    //    'active' => 'boolean',
    //    
    //];

    public function scopeOfUser($query, $userId)
    {
        return $query->where('user_id', $userId);
    }

     public function user(): BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    //public function getPublished()
    //{
    //    return $this->created_at->format(config('starterkid.time_format.date_time_format'));
    //}

    //public function getDate()
    //{
    //    return $this->date->format(config('starterkid.time_format.date_format'));
    //}

    //public function getDateTime()
    //{
    //    return $this->date_time->format(config('starterkid.time_format.date_time_format'));
    //}

    //public function getTime()
    //{
    //    return $this->time->format(config('starterkid.time_format.time_format'));
    //}

    //protected function name(): Attribute
    //{
    //    return Attribute::make(
    //        get: fn (string $value) => ucfirst($value),
    //        set: fn (string $value) => ucfirst($value),
    //    );
    //}

    //public function registerMediaConversions(?Media $media = null): void
    //{
    //      $this->addMediaConversion('thumb')
    //          ->width(config('starterkid.image_conversions.thumb.width'))
    //          ->sharpen(config('starterkid.image_conversions.thumb.sharpen'))
    //          ->quality(config('starterkid.image_conversions.thumb.quality'));
    //      $this->addMediaConversion('medium')
    //          ->width(config('starterkid.image_conversions.medium.width'))
    //          ->sharpen(config('starterkid.image_conversions.medium.sharpen'))
    //          ->quality(config('starterkid.image_conversions.medium.quality'));
    //      $this->addMediaConversion('large')
    //          ->width(config('starterkid.image_conversions.large.width'))
    //          ->sharpen(config('starterkid.image_conversions.large.sharpen'))
    //          ->quality(config('starterkid.image_conversions.large.quality'));
    //}

    //public function scopeFrontGet{{ singularUcfirst }}WhereStatusIsOnline(\Illuminate\Database\Eloquent\Builder $query, $search = '', $orderBy = 'created_at', $sort = 'desc'): \Illuminate\Database\Eloquent\Builder
    //{
    //    $query = $query->select('id', 'name', 'title', 'created_at', 'status', 'slug')
    //        ->where('status', true);
    //
    //    if (!empty($search)) {
    //        $query->where(function ($query) use ($search) {
    //            $query->where('name', 'like', '%' . $search . '%')
    //                ->orWhere('title', 'like', '%' . $search . '%');
    //                
    //        });
    //    }
    //
    //    $query->orderBy($oderBy, $sort);
    //
    //    return $query;
    //}

    //protected static function boot()
    //{
    //    parent::boot();
    //
    //    static::updated(function ($model) {
    //        $url = route('front.{{ singularStrtolower }}.show', ['slug' => $model->slug]);
    //        $cacheKey = \GrassFeria\StarterkidFrontend\Services\GetCacheKey::ForUrl($url);
    //        \Illuminate\Support\Facades\Cache::forget($cacheKey);
    //        $cacheKeyHomepage = \GrassFeria\StarterkidFrontend\Services\GetCacheKey::ForUrl(route('front.homepage'));
    //        \Illuminate\Support\Facades\Cache::forget($cacheKeyHomepage);
    //       
    //    });
    //    static::deleted(function ($model) {
    //        $url = route('front.{{ singularStrtolower }}.show', ['slug' => $model->slug]);
    //        $cacheKey = \GrassFeria\StarterkidFrontend\Services\GetCacheKey::ForUrl($url);
    //        \Illuminate\Support\Facades\Cache::forget($cacheKey);
    //        $cacheKeyHomepage = \GrassFeria\StarterkidFrontend\Services\GetCacheKey::ForUrl(route('front.homepage'));
    //        \Illuminate\Support\Facades\Cache::forget($cacheKeyHomepage);
    //     });
    //}
}